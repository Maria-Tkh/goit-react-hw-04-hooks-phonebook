{"version":3,"sources":["components/СontactForm/СontactForm.styled.jsx","components/СontactForm/СontactForm.jsx","components/СontactElement/ContactElement.styled.jsx","components/СontactElement/СontactElement.jsx","components/СontactList/СontactList.styled.jsx","components/СontactList/СontactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App.styled.jsx","components/App.jsx","index.js"],"names":["Form","styled","form","Input","input","Button","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleContact","e","currentTarget","value","preventDefault","htmlFor","onChange","type","pattern","title","required","Item","li","ContactElement","id","onClick","List","ul","ContactList","contacts","onDeleteContact","map","contact","Label","label","Filter","PhonebookTitle","h1","ContactTitle","h2","App","defaultValue","filter","setFilter","JSON","parse","window","localStorage","getItem","setContacts","useEffect","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","newContact","uuidv4","some","alert","prevState","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aec3e66.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  // display: block;\n  margin-left: 20px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  background-color: #34b4eb;\n  border-color: #34b4eb;\n  border-radius: 4px;\n`;\n","import { useState } from 'react';\nimport { Form, Input, Button } from './СontactForm.styled';\n\nexport const ContactForm = ({ onSubmit}) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n   \n  const handleContact = e => {\n\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      \n       case 'number':\n        setNumber(value);\n        break;\n      \n      default:\n        return;\n    }\n      };\n\n  const handleSubmitContact = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    // e.target.reset();\n    setName('');\n    setNumber('');\n  };\n\n  \n    return (\n      <Form onSubmit={handleSubmitContact}>\n        <label htmlFor=\"name\">\n          Name\n          <Input\n            value={name}\n            onChange={handleContact}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\n             Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label htmlFor=\"number\">\n          Number\n          <Input\n            value={number}\n            onChange={handleContact}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы,\n             тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <div>\n          <Button type=\"submit\">Add contact</Button>\n        </div>\n      </Form>\n    );\n  }\n\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  width: 300px;\n  margin: 4px;\n`;\n\nexport const Button = styled.button`\n  background-color: #34b4eb;\n  border-color: #34b4eb;\n  border-radius: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Button } from './ContactElement.styled';\n\nexport const ContactElement = ({ id, name, number, onClick }) => {\n  return (\n    <Item key={id}>\n      <span>\n        {name}: {number}\n      </span>\n      <Button type=\"button\" onClick={onClick}>\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nContactElement.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding-left: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactElement } from 'components/СontactElement/СontactElement';\nimport { List } from './СontactList.styled';\n\nexport const ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ContactElement\n          name={contact.name}\n          number={contact.number}\n          key={contact.id}\n          onClick={() => onDeleteContact(contact.id)}\n        />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  margin-left: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Label } from './Filter.styled';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      <p> Find contact by name</p>\n      <input type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const PhonebookTitle = styled.h1`\n  margin-left: 20px;\n`;\n\nexport const ContactTitle = styled.h2`\n  margin-left: 20px;\n`;\n","import { useState, useEffect} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ContactForm } from './СontactForm/СontactForm';\nimport { ContactList } from './СontactList/СontactList';\nimport { Filter } from './Filter/Filter';\nimport { PhonebookTitle, ContactTitle } from './App.styled';\n\nexport const App = () => {\n  const defaultValue = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ];\n  \n  const [filter, setFilter] = useState('');\n\n  const [contacts, setContacts] = useState(() => {\n    return (\n      JSON.parse(window.localStorage.getItem(\"contacts\")) ?? defaultValue\n    );\n  });\n \n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = ( name, number ) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    contacts.some(contact => contact.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts`)\n      : setContacts( prevState => [newContact, ...prevState],\n      );\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n    // console.log(e.currentTarget.value);\n  };\n\n\n  const deleteContact = contactId => {\n    setContacts(prevState => prevState.filter(contact =>\n      contact.id !== contactId)\n    )};\n\n  \n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <div>\n      <PhonebookTitle>Phonebook</PhonebookTitle>\n      <ContactForm onSubmit={formSubmitHandler} />\n      <ContactTitle>Contacts</ContactTitle>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}